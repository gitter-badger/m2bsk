(*!m2pim*) (* Copyright (c) 2015 B.Kowarsch. All rights reserved. *)

DEFINITION MODULE NonTerminals;

(* FIRST/FOLLOW set database for Modula-2 R10 Bootstrap Kernel *)

FROM Token IMPORT TokenT;
FROM TokenSet IMPORT TokenSetT;


(* Productions *)

TYPE Production =
  ( CompilationUnit,
    DefintionModule,
    Import,
    Ident,
    Qualident,
    IdentList,
    Definition,
    ConstDefinition,
    TypeDefinition,
    Type,
    AliasType,
    SubrangeType,
    Range,
    EnumType,
    SetType,
    ArrayType,
    RecordType,
    RecTypeToExtend,
    PointerType,
    ProcedureType,
    FormalType,
    NonAttrFormalType,
    CastingFormalType,
    AddressTypeIdent,
    AttributedFormalType,
    SimpleVariadicFormalType,
    ProcedureHeader,
    ProcedureSignature,
    FormalParams,
    AttributedFormalParams,
    ImplOrPrgmModule,
    Block,
    Declaration,
    AliasDeclaration,
    NamedAliasDecl,
    QualifiedWildcard,
    WildcardAliasDecl,
    TypeDeclaration,
    IndeterminateType,
    IndeterminateField,
    VarOrFieldDeclaration,
    AnonType,
    StatementSequence,
    Statement,
    ToDoList,
    TrackingRef,
    TaskToDo,
    MemMgtOperation,
    UpdateOrProcCall,
    ReturnStatement,
    IfStatement,
    CaseStatement,
    Case,
    CaseLabels,
    LoopStatement,
    WhileStatement,
    RepeatStatement,
    ForStatement,
    ForLoopVariants,
    IterableExpr,
    OrdinalRange,
    Designator,
    DesignatorTail,
    ExprOrSlice,
    SliceTail,
    ExpressionList,
    Expression,
    SimpleExpression,
    Term,
    SimpleTerm,
    Factor,
    SimpleFactor,
    DesignatorOrFuncCall,
    StructuredValue,
    ValueComponent);

TYPE ProductionT = Production; (* for unqualified use *)


(* Operations *)

PROCEDURE FIRST ( p : Production ) : TokenSetT;
(* Returns a reference to the FIRST set of production p. *)

PROCEDURE inFIRST ( p : Production; token : TokenT ) : BOOLEAN;
(* Returns TRUE if token is an element of FIRST(p), otherwise FALSE. *)

PROCEDURE FOLLOW ( p : Production ) : TokenSetT;
(* Returns a reference to the FOLLOW set of production p. *)

PROCEDURE inFOLLOW ( p : Production; token : TokenT ) : BOOLEAN;
(* Returns TRUE if token is an element of FOLLOW(p), otherwise FALSE. *)


END NonTerminals.