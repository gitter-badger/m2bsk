(*!m2pim*) (* Copyright (c) 2017 B.Kowarsch. All rights reserved. *)

IMPLEMENTATION MODULE CardMath; (* 64-bit version *)

(* Cardinal Math library *)

IMPORT Console;

FROM SYSTEM IMPORT TSIZE;


CONST
  Bitwidth = 64;


(* --------------------------------------------------------------------------
 * Data table for powers of 2
 * ----------------------------------------------------------------------- *)

VAR
  powerOf2 : ARRAY [0..Bitwidth-1] OF CARDINAL;


(* --------------------------------------------------------------------------
 * function pow2(n)
 * --------------------------------------------------------------------------
 * Returns the power of 2 for argument n
 * ----------------------------------------------------------------------- *)

PROCEDURE pow2 ( n : CARDINAL ) : CARDINAL;

BEGIN
  RETURN powerOf2[n]
END pow2;


(* --------------------------------------------------------------------------
 * function log2(n)
 * --------------------------------------------------------------------------
 * Returns the integral part of the logarithm of 2 for argument n
 * ----------------------------------------------------------------------- *)

PROCEDURE log2 ( n : CARDINAL ) : CARDINAL;

BEGIN
  CASE n OF
    0 : HALT
  | 1 : RETURN 0
  | 2 : RETURN 1
  | 3, 4 : RETURN 2
  | 5..8 : RETURN 3
  | 9..16 : RETURN 4
  | 17..32 : RETURN 5
  | 33..64 : RETURN 6
  | 65..128 : RETURN 7
  | 129..256 : RETURN 8
  | 257..512 : RETURN 9
  | 513..1024 : RETURN 10
  | 1025..2048 : RETURN 11
  | 2049..4096 : RETURN 12
  | 4097..8192 : RETURN 13
  | 8193..16384 : RETURN 14
  | 16385..32768 : RETURN 15
  | 32769..65536 : RETURN 16
  | 65537..131072 : RETURN 17
  | 131073..262144 : RETURN 18
  | 262145..524288 : RETURN 19
  | 524289..1048576 : RETURN 20
  | 1048577..2097152 : RETURN 21
  | 2097153..4194304 : RETURN 22
  | 4194305..8388608 : RETURN 23
  | 8388609..16777216 : RETURN 24
  | 16777217..33554432 : RETURN 25
  | 33554433..67108864 : RETURN 26
  | 67108865..134217728 : RETURN 27
  | 134217729..268435456 : RETURN 28
  | 268435457..536870912 : RETURN 29
  | 536870913..1073741824 : RETURN 30
  | 1073741825..2147483648 : RETURN 31
  | 2147483649..4294967296 : RETURN 32
  | 4294967297..8589934592 : RETURN 33
  | 8589934593..17179869184 : RETURN 34
  | 17179869185..34359738368 : RETURN 35
  | 34359738369..68719476736 : RETURN 36
  | 68719476737..137438953472 : RETURN 37
  | 137438953473..274877906944 : RETURN 38
  | 274877906945..549755813888 : RETURN 39
  | 549755813889..1099511627776 : RETURN 40
  | 1099511627777..2199023255552 : RETURN 41
  | 2199023255553..4398046511104 : RETURN 42
  | 4398046511105..8796093022208 : RETURN 43
  | 8796093022209..17592186044416 : RETURN 44
  | 17592186044417..35184372088832 : RETURN 45
  | 35184372088833..70368744177664 : RETURN 46
  | 70368744177665..140737488355328 : RETURN 47
  | 140737488355329..281474976710656 : RETURN 48
  | 281474976710657..562949953421312 : RETURN 49
  | 562949953421313..1125899906842624 : RETURN 50
  | 1125899906842625..2251799813685248 : RETURN 51
  | 2251799813685249..4503599627370496 : RETURN 52
  | 4503599627370497..9007199254740992 : RETURN 53
  | 9007199254740993..18014398509481984 : RETURN 54
  | 18014398509481985..36028797018963968 : RETURN 55
  | 36028797018963969..72057594037927936 : RETURN 56
  | 72057594037927937..144115188075855872 : RETURN 57
  | 144115188075855873..288230376151711744 : RETURN 58
  | 288230376151711745..576460752303423488 : RETURN 59
  | 576460752303423489..1152921504606846976 : RETURN 60
  | 1152921504606846977..2305843009213693952 : RETURN 61
  | 2305843009213693953..4611686018427387904 : RETURN 62
  | 4611686018427387905..9223372036854775808 : RETURN 63
  | 9223372036854775809..MAX(CARDINAL) : RETURN 64
  END (* CASE *)
END log2;


(* ************************************************************************ *
 * Private Operations                                                       *
 * ************************************************************************ *)

(* --------------------------------------------------------------------------
 * procedure: InitPow2Table
 * --------------------------------------------------------------------------
 * Initialises data table with powers of 2.
 * ----------------------------------------------------------------------- *)

PROCEDURE InitPow2Table;

BEGIN
  powerOf2[0] := 1;
  powerOf2[1] := 2;
  powerOf2[2] := 4;
  powerOf2[3] := 8;
  powerOf2[4] := 16;
  powerOf2[5] := 32;
  powerOf2[6] := 64;
  powerOf2[7] := 128;
  powerOf2[8] := 256;
  powerOf2[9] := 512;
  powerOf2[10] := 1024;
  powerOf2[11] := 2048;
  powerOf2[12] := 4096;
  powerOf2[13] := 8192;
  powerOf2[14] := 16384;
  powerOf2[15] := 32768;
  powerOf2[16] := 65536;
  powerOf2[17] := 131072;
  powerOf2[18] := 262144;
  powerOf2[19] := 524288;
  powerOf2[20] := 1048576;
  powerOf2[21] := 2097152;
  powerOf2[22] := 4194304;
  powerOf2[23] := 8388608;
  powerOf2[24] := 16777216;
  powerOf2[25] := 33554432;
  powerOf2[26] := 67108864;
  powerOf2[27] := 134217728;
  powerOf2[28] := 268435456;
  powerOf2[29] := 536870912;
  powerOf2[30] := 1073741824;
  powerOf2[31] := 2147483648;
  powerOf2[32] := 4294967296;
  powerOf2[33] := 8589934592;
  powerOf2[34] := 17179869184;
  powerOf2[35] := 34359738368;
  powerOf2[36] := 68719476736;
  powerOf2[37] := 137438953472;
  powerOf2[38] := 274877906944;
  powerOf2[39] := 549755813888;
  powerOf2[40] := 1099511627776;
  powerOf2[41] := 2199023255552;
  powerOf2[42] := 4398046511104;
  powerOf2[43] := 8796093022208;
  powerOf2[44] := 17592186044416;
  powerOf2[45] := 35184372088832;
  powerOf2[46] := 70368744177664;
  powerOf2[47] := 140737488355328;
  powerOf2[48] := 281474976710656;
  powerOf2[49] := 562949953421312;
  powerOf2[50] := 1125899906842624;
  powerOf2[51] := 2251799813685248;
  powerOf2[52] := 4503599627370496;
  powerOf2[53] := 9007199254740992;
  powerOf2[54] := 18014398509481984;
  powerOf2[55] := 36028797018963968;
  powerOf2[56] := 72057594037927936;
  powerOf2[57] := 144115188075855872;
  powerOf2[58] := 288230376151711744;
  powerOf2[59] := 576460752303423488;
  powerOf2[60] := 1152921504606846976;
  powerOf2[61] := 2305843009213693952;
  powerOf2[62] := 4611686018427387904;
  powerOf2[63] := 9223372036854775808
END InitPow2Table;


BEGIN (* CardMath *)
  (* bail out if CARDINAL is not 64-bit wide *)
  IF TSIZE(CARDINAL) # Bitwidth THEN
    Console.WriteChars("Library CardMath requires 64-bit CARDINALs.");
    Console.WriteLn;
    HALT
  END; (* IF *)
  
  (* Initialise data table *)
  InitPow2Table
END CardMath.